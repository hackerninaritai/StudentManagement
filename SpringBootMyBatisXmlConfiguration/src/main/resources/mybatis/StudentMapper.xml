<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.StudentMapper">
	<!--<cache /> -->
	<resultMap id="baseResultMap"
		type="com.example.demo.domain.Student">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
	</resultMap>

	<select id="findAll" resultMap="baseResultMap">
		select id,name,phone,email from
		student
	</select>

	<resultMap id="studentClassDetail" type="Student">
		<id property="id" column="student_id" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="branch" property="branch" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />

		<association property="studentClass" column="class_id"
			javaType="StudentClass" resultMap="studentClass" />
	</resultMap>

	<resultMap id="studentClass" type="StudentClass">
		<id property="id" column="class_id" />
		<result property="className" column="class_name" />
	</resultMap>

	<select id="findAllWithClass" resultMap="studentClassDetail">
		SELECT s.id as student_id, s.name,
		s.branch, s.percentage, s.phone, s.email,
		c.id as class_id, c.class_name FROM
		Student s JOIN student_class c ON
		c.id = s.class_id
	</select>

	<select id="findClassMate" resultMap="studentClassDetail">
		select id,name,phone,email
		from
		student s WHERE s.class_id = #{studentClass.id}
	</select>

	<select id="findById" parameterType="int"
		resultType="com.example.demo.domain.Student">
		select * from student where id = #{id}
	</select>

	<select id="findStudentLike" parameterType="Student"
		resultType="Student">
		SELECT * FROM STUDENT
		<where>
			<if test="id != 0">
				id = #{id}
			</if>
			<if test="name != null">
				AND name LIKE #{name}
			</if>
			<if test="phone != 0">
				AND phone LIKE #{phone}
			</if>
		</where>
	</select>

	<select id="findStudentByNameOrEmail" resultType="Student">
		SELECT * FROM Student WHERE id != 0
		<choose>
			<when test="name != null">
				AND name like #{name}
			</when>
			<when test="email != null">
				AND email like #{email}
			</when>
			<otherwise>
				AND featured = 1
			</otherwise>
		</choose>
	</select>

	<insert id="insert" parameterType="Student">
		INSERT INTO STUDENT (NAME,
		BRANCH, PERCENTAGE, PHONE, EMAIL )
		VALUES (#{name}, #{branch},
		#{percentage}, #{phone}, #{email});
	</insert>


</mapper>